class Prenda {
	variable tipo
	variable precio
	variable estado

	method calcularPrecioFinal()
		if estado es PROMOCION 
			return precio - VALOR_A_RESTAR ?
		if estado es LIQUIDACION
			return precio * 0.5
		else 
			return precio
}

class ItemPrenda { 
	variable prenda
	variable cantidad

	method obtenerPrecioTotal()
		return prenda.calcularPrecioFinal() * cantidad
}

class Venta {
	variable prendasVendidas // Lista de ItemPrenda
	variable formaPago
	variable cuotas
	variable monto // Para cuando se genere la venta, guardar el monto en ese momento

	method calcularMonto(){
		if formaPago es EFECTIVO 
			return prendasVendidas.sumar(prenda -> prenda.obtenerPrecioTotal())
		else {
			valorPrendas = prendasVendidas.sumar(prenda -> prenda.obtenerPrecioTotal())
			return valorPrendas + (valorPrendas * 0.01) + (cuotas * COEFICIENTE_RECARGO)
		} 

	}
}


- Otra alternativa?
En la clase Prenda, se podría crear otra clase que calcule los precios de acuerdo al estado. Es decir, que tenga 3 objetos (uno por cada estado, promoción, liquidación y nueva) y en el método de calcularPrecioFinal() en prenda, delegarlo directamente al objeto estado.

method calcularPrecioFinal(){
	return estado.calcularPrecio(this)	// this = prenda actual
}

De esa forma la prenda no tendría relación con cómo se calcula su precio según el estado, pero habría que generar 3 objetos de estado siempre. 

- Comentario de la solución:
El atributo monto en la clase Venta es para saber cuánto costo esa venta en el momento en el que se vendió, porque si se tiene que volver a calcular, los precios de las prendas pueden haber cambiado y daría un resultado que no es el que se vendió. 

El VALOR_A_RESTAR y COEFICIENTE_RECARGO no me queda claro de donde se obtendrían. 
